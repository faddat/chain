// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: lumnetwork/chain/millions/withdrawal.proto

package types

import (
	fmt "fmt"
	_ "github.com/cosmos/cosmos-proto"
	types "github.com/cosmos/cosmos-sdk/types"
	_ "github.com/cosmos/gogoproto/gogoproto"
	proto "github.com/cosmos/gogoproto/proto"
	_ "github.com/cosmos/gogoproto/types"
	github_com_cosmos_gogoproto_types "github.com/cosmos/gogoproto/types"
	io "io"
	math "math"
	math_bits "math/bits"
	time "time"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf
var _ = time.Kitchen

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

type WithdrawalState int32

const (
	WithdrawalState_Unspecified   WithdrawalState = 0
	WithdrawalState_IcaUndelegate WithdrawalState = 1
	WithdrawalState_IcaUnbonding  WithdrawalState = 2
	WithdrawalState_IbcTransfer   WithdrawalState = 3
	WithdrawalState_Failure       WithdrawalState = 4
)

var WithdrawalState_name = map[int32]string{
	0: "WITHDRAWAL_STATE_UNSPECIFIED",
	1: "WITHDRAWAL_STATE_ICA_UNDELEGATE",
	2: "WITHDRAWAL_STATE_ICA_UNBONDING",
	3: "WITHDRAWAL_STATE_IBC_TRANSFER",
	4: "WITHDRAWAL_STATE_FAILURE",
}

var WithdrawalState_value = map[string]int32{
	"WITHDRAWAL_STATE_UNSPECIFIED":    0,
	"WITHDRAWAL_STATE_ICA_UNDELEGATE": 1,
	"WITHDRAWAL_STATE_ICA_UNBONDING":  2,
	"WITHDRAWAL_STATE_IBC_TRANSFER":   3,
	"WITHDRAWAL_STATE_FAILURE":        4,
}

func (x WithdrawalState) String() string {
	return proto.EnumName(WithdrawalState_name, int32(x))
}

func (WithdrawalState) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_47fd20d83daed3c4, []int{0}
}

type Withdrawal struct {
	PoolId           uint64          `protobuf:"varint,1,opt,name=pool_id,json=poolId,proto3" json:"pool_id,omitempty"`
	DepositId        uint64          `protobuf:"varint,2,opt,name=deposit_id,json=depositId,proto3" json:"deposit_id,omitempty"`
	WithdrawalId     uint64          `protobuf:"varint,3,opt,name=withdrawal_id,json=withdrawalId,proto3" json:"withdrawal_id,omitempty"`
	State            WithdrawalState `protobuf:"varint,4,opt,name=state,proto3,enum=lumnetwork.chain.millions.WithdrawalState" json:"state,omitempty"`
	ErrorState       WithdrawalState `protobuf:"varint,5,opt,name=error_state,json=errorState,proto3,enum=lumnetwork.chain.millions.WithdrawalState" json:"error_state,omitempty"`
	DepositorAddress string          `protobuf:"bytes,6,opt,name=depositor_address,json=depositorAddress,proto3" json:"depositor_address,omitempty"`
	ToAddress        string          `protobuf:"bytes,7,opt,name=to_address,json=toAddress,proto3" json:"to_address,omitempty"`
	Amount           types.Coin      `protobuf:"bytes,8,opt,name=amount,proto3" json:"amount"`
	CreatedAtHeight  int64           `protobuf:"varint,9,opt,name=created_at_height,json=createdAtHeight,proto3" json:"created_at_height,omitempty"`
	UpdatedAtHeight  int64           `protobuf:"varint,10,opt,name=updated_at_height,json=updatedAtHeight,proto3" json:"updated_at_height,omitempty"`
	UnbondingEndsAt  *time.Time      `protobuf:"bytes,11,opt,name=unbonding_ends_at,json=unbondingEndsAt,proto3,stdtime" json:"unbonding_ends_at,omitempty"`
	CreatedAt        time.Time       `protobuf:"bytes,12,opt,name=created_at,json=createdAt,proto3,stdtime" json:"created_at"`
	UpdatedAt        time.Time       `protobuf:"bytes,13,opt,name=updated_at,json=updatedAt,proto3,stdtime" json:"updated_at"`
}

func (m *Withdrawal) Reset()         { *m = Withdrawal{} }
func (m *Withdrawal) String() string { return proto.CompactTextString(m) }
func (*Withdrawal) ProtoMessage()    {}
func (*Withdrawal) Descriptor() ([]byte, []int) {
	return fileDescriptor_47fd20d83daed3c4, []int{0}
}
func (m *Withdrawal) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *Withdrawal) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_Withdrawal.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *Withdrawal) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Withdrawal.Merge(m, src)
}
func (m *Withdrawal) XXX_Size() int {
	return m.Size()
}
func (m *Withdrawal) XXX_DiscardUnknown() {
	xxx_messageInfo_Withdrawal.DiscardUnknown(m)
}

var xxx_messageInfo_Withdrawal proto.InternalMessageInfo

func (m *Withdrawal) GetPoolId() uint64 {
	if m != nil {
		return m.PoolId
	}
	return 0
}

func (m *Withdrawal) GetDepositId() uint64 {
	if m != nil {
		return m.DepositId
	}
	return 0
}

func (m *Withdrawal) GetWithdrawalId() uint64 {
	if m != nil {
		return m.WithdrawalId
	}
	return 0
}

func (m *Withdrawal) GetState() WithdrawalState {
	if m != nil {
		return m.State
	}
	return WithdrawalState_Unspecified
}

func (m *Withdrawal) GetErrorState() WithdrawalState {
	if m != nil {
		return m.ErrorState
	}
	return WithdrawalState_Unspecified
}

func (m *Withdrawal) GetDepositorAddress() string {
	if m != nil {
		return m.DepositorAddress
	}
	return ""
}

func (m *Withdrawal) GetToAddress() string {
	if m != nil {
		return m.ToAddress
	}
	return ""
}

func (m *Withdrawal) GetAmount() types.Coin {
	if m != nil {
		return m.Amount
	}
	return types.Coin{}
}

func (m *Withdrawal) GetCreatedAtHeight() int64 {
	if m != nil {
		return m.CreatedAtHeight
	}
	return 0
}

func (m *Withdrawal) GetUpdatedAtHeight() int64 {
	if m != nil {
		return m.UpdatedAtHeight
	}
	return 0
}

func (m *Withdrawal) GetUnbondingEndsAt() *time.Time {
	if m != nil {
		return m.UnbondingEndsAt
	}
	return nil
}

func (m *Withdrawal) GetCreatedAt() time.Time {
	if m != nil {
		return m.CreatedAt
	}
	return time.Time{}
}

func (m *Withdrawal) GetUpdatedAt() time.Time {
	if m != nil {
		return m.UpdatedAt
	}
	return time.Time{}
}

type WithdrawalIDs struct {
	PoolId       uint64 `protobuf:"varint,1,opt,name=pool_id,json=poolId,proto3" json:"pool_id,omitempty"`
	WithdrawalId uint64 `protobuf:"varint,2,opt,name=withdrawal_id,json=withdrawalId,proto3" json:"withdrawal_id,omitempty"`
}

func (m *WithdrawalIDs) Reset()         { *m = WithdrawalIDs{} }
func (m *WithdrawalIDs) String() string { return proto.CompactTextString(m) }
func (*WithdrawalIDs) ProtoMessage()    {}
func (*WithdrawalIDs) Descriptor() ([]byte, []int) {
	return fileDescriptor_47fd20d83daed3c4, []int{1}
}
func (m *WithdrawalIDs) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *WithdrawalIDs) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_WithdrawalIDs.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *WithdrawalIDs) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WithdrawalIDs.Merge(m, src)
}
func (m *WithdrawalIDs) XXX_Size() int {
	return m.Size()
}
func (m *WithdrawalIDs) XXX_DiscardUnknown() {
	xxx_messageInfo_WithdrawalIDs.DiscardUnknown(m)
}

var xxx_messageInfo_WithdrawalIDs proto.InternalMessageInfo

func (m *WithdrawalIDs) GetPoolId() uint64 {
	if m != nil {
		return m.PoolId
	}
	return 0
}

func (m *WithdrawalIDs) GetWithdrawalId() uint64 {
	if m != nil {
		return m.WithdrawalId
	}
	return 0
}

type WithdrawalIDsCollection struct {
	WithdrawalsIds []WithdrawalIDs `protobuf:"bytes,1,rep,name=withdrawals_ids,json=withdrawalsIds,proto3" json:"withdrawals_ids"`
}

func (m *WithdrawalIDsCollection) Reset()         { *m = WithdrawalIDsCollection{} }
func (m *WithdrawalIDsCollection) String() string { return proto.CompactTextString(m) }
func (*WithdrawalIDsCollection) ProtoMessage()    {}
func (*WithdrawalIDsCollection) Descriptor() ([]byte, []int) {
	return fileDescriptor_47fd20d83daed3c4, []int{2}
}
func (m *WithdrawalIDsCollection) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *WithdrawalIDsCollection) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_WithdrawalIDsCollection.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *WithdrawalIDsCollection) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WithdrawalIDsCollection.Merge(m, src)
}
func (m *WithdrawalIDsCollection) XXX_Size() int {
	return m.Size()
}
func (m *WithdrawalIDsCollection) XXX_DiscardUnknown() {
	xxx_messageInfo_WithdrawalIDsCollection.DiscardUnknown(m)
}

var xxx_messageInfo_WithdrawalIDsCollection proto.InternalMessageInfo

func (m *WithdrawalIDsCollection) GetWithdrawalsIds() []WithdrawalIDs {
	if m != nil {
		return m.WithdrawalsIds
	}
	return nil
}

func init() {
	proto.RegisterEnum("lumnetwork.chain.millions.WithdrawalState", WithdrawalState_name, WithdrawalState_value)
	proto.RegisterType((*Withdrawal)(nil), "lumnetwork.chain.millions.Withdrawal")
	proto.RegisterType((*WithdrawalIDs)(nil), "lumnetwork.chain.millions.WithdrawalIDs")
	proto.RegisterType((*WithdrawalIDsCollection)(nil), "lumnetwork.chain.millions.WithdrawalIDsCollection")
}

func init() {
	proto.RegisterFile("lumnetwork/chain/millions/withdrawal.proto", fileDescriptor_47fd20d83daed3c4)
}

var fileDescriptor_47fd20d83daed3c4 = []byte{
	// 765 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x94, 0x94, 0x4f, 0x6f, 0xe2, 0x46,
	0x18, 0xc6, 0x31, 0x10, 0xb2, 0x0c, 0x61, 0x01, 0x6b, 0xa5, 0x75, 0xac, 0xae, 0xb1, 0xd2, 0x0b,
	0x45, 0x8a, 0xad, 0xd0, 0xaa, 0xbd, 0xd6, 0x80, 0xc9, 0x5a, 0x4d, 0xe9, 0xca, 0x80, 0x90, 0x7a,
	0xb1, 0x8c, 0x67, 0x62, 0x46, 0xb5, 0x67, 0x90, 0x67, 0xdc, 0xb4, 0xdf, 0xa0, 0xe2, 0xb4, 0xb7,
	0x9e, 0x38, 0xf5, 0x2b, 0xf4, 0x43, 0xe4, 0xb8, 0xea, 0xa9, 0xa7, 0x6d, 0x95, 0xa8, 0xdf, 0xa3,
	0xf2, 0x9f, 0xe0, 0xee, 0xa2, 0xa8, 0xbb, 0x37, 0xcf, 0xfb, 0x3e, 0xbf, 0xc7, 0xef, 0xeb, 0x79,
	0x64, 0xd0, 0x0f, 0xe2, 0x90, 0x20, 0x7e, 0x43, 0xa3, 0x1f, 0x74, 0x6f, 0xed, 0x62, 0xa2, 0x87,
	0x38, 0x08, 0x30, 0x25, 0x4c, 0xbf, 0xc1, 0x7c, 0x0d, 0x23, 0xf7, 0xc6, 0x0d, 0xb4, 0x4d, 0x44,
	0x39, 0x15, 0x4f, 0x0b, 0xad, 0x96, 0x6a, 0xb5, 0x07, 0xad, 0xfc, 0xcc, 0xa7, 0x3e, 0x4d, 0x55,
	0x7a, 0xf2, 0x94, 0x01, 0x72, 0xd7, 0xa7, 0xd4, 0x0f, 0x90, 0x9e, 0x9e, 0x56, 0xf1, 0xb5, 0xce,
	0x71, 0x88, 0x18, 0x77, 0xc3, 0x4d, 0x2e, 0x50, 0x3c, 0xca, 0x42, 0xca, 0xf4, 0x95, 0xcb, 0x90,
	0xfe, 0xe3, 0xc5, 0x0a, 0x71, 0xf7, 0x42, 0xf7, 0x28, 0x26, 0x79, 0xff, 0x34, 0xeb, 0x3b, 0x99,
	0x73, 0x76, 0xc8, 0x5a, 0x67, 0xff, 0x1c, 0x01, 0xb0, 0xdc, 0x4f, 0x28, 0x3e, 0x07, 0xc7, 0x1b,
	0x4a, 0x03, 0x07, 0x43, 0x49, 0x50, 0x85, 0x5e, 0xd5, 0xae, 0x25, 0x47, 0x0b, 0x8a, 0x2f, 0x00,
	0x80, 0x68, 0x43, 0x19, 0xe6, 0x49, 0xaf, 0x9c, 0xf6, 0xea, 0x79, 0xc5, 0x82, 0xe2, 0xa7, 0xa0,
	0x59, 0xec, 0x99, 0x28, 0x2a, 0xa9, 0xe2, 0xa4, 0x28, 0x5a, 0x50, 0xfc, 0x1a, 0x1c, 0x31, 0xee,
	0x72, 0x24, 0x55, 0x55, 0xa1, 0xf7, 0x74, 0xd0, 0xd7, 0x1e, 0xfd, 0x10, 0x5a, 0x31, 0xd2, 0x2c,
	0x21, 0xec, 0x0c, 0x14, 0xbf, 0x01, 0x0d, 0x14, 0x45, 0x34, 0x72, 0x32, 0x9f, 0xa3, 0x8f, 0xf6,
	0x01, 0x29, 0x9e, 0x3e, 0x8b, 0x26, 0xe8, 0xe4, 0x0b, 0xd0, 0xc8, 0x71, 0x21, 0x8c, 0x10, 0x63,
	0x52, 0x4d, 0x15, 0x7a, 0xf5, 0xa1, 0xf4, 0xc7, 0xef, 0xe7, 0xcf, 0xf2, 0xef, 0x64, 0x64, 0x9d,
	0x19, 0x8f, 0x30, 0xf1, 0xed, 0xf6, 0x1e, 0xc9, 0xeb, 0xe2, 0x57, 0x00, 0x70, 0xba, 0xe7, 0x8f,
	0xff, 0x87, 0xaf, 0x73, 0x5a, 0x80, 0x35, 0x37, 0xa4, 0x31, 0xe1, 0xd2, 0x13, 0x55, 0xe8, 0x35,
	0x06, 0xa7, 0x5a, 0x4e, 0x24, 0xd7, 0xa8, 0xe5, 0xd7, 0xa8, 0x8d, 0x28, 0x26, 0xc3, 0xea, 0xed,
	0xdb, 0x6e, 0xc9, 0xce, 0xe5, 0x62, 0x1f, 0x74, 0xbc, 0x08, 0xb9, 0x1c, 0x41, 0xc7, 0xe5, 0xce,
	0x1a, 0x61, 0x7f, 0xcd, 0xa5, 0xba, 0x2a, 0xf4, 0x2a, 0x76, 0x2b, 0x6f, 0x18, 0xfc, 0x65, 0x5a,
	0x4e, 0xb4, 0xf1, 0x06, 0xbe, 0xa7, 0x05, 0x99, 0x36, 0x6f, 0xec, 0xb5, 0xaf, 0x40, 0x27, 0x26,
	0x2b, 0x4a, 0x20, 0x26, 0xbe, 0x83, 0x08, 0x64, 0x8e, 0xcb, 0xa5, 0x46, 0x3a, 0x9b, 0xac, 0x65,
	0x19, 0xd4, 0x1e, 0x32, 0xa8, 0xcd, 0x1f, 0x32, 0x38, 0x7c, 0x72, 0xfb, 0xb6, 0x2b, 0xbc, 0xfe,
	0xab, 0x2b, 0xd8, 0xad, 0x3d, 0x6e, 0x12, 0xc8, 0x0c, 0x2e, 0x8e, 0x00, 0x28, 0x26, 0x95, 0x4e,
	0x3e, 0xc8, 0xaa, 0x94, 0x5a, 0xd5, 0xf7, 0x8b, 0x24, 0x26, 0xc5, 0x0a, 0x52, 0xf3, 0x63, 0x4c,
	0xf6, 0x1b, 0x9e, 0x7d, 0x0b, 0x9a, 0x45, 0x16, 0xac, 0x31, 0x7b, 0x3c, 0xe9, 0x07, 0x51, 0x2e,
	0x1f, 0x46, 0xf9, 0x2c, 0x02, 0xcf, 0xdf, 0xb1, 0x1b, 0xd1, 0x20, 0x40, 0x1e, 0xc7, 0x94, 0x88,
	0x4b, 0xd0, 0x2a, 0xa4, 0xcc, 0xc1, 0x90, 0x49, 0x82, 0x5a, 0xe9, 0x35, 0x06, 0xbd, 0x0f, 0xca,
	0xa9, 0x35, 0x66, 0xf9, 0x75, 0x3f, 0xfd, 0x8f, 0x8d, 0x05, 0x59, 0xff, 0xd7, 0x32, 0x68, 0xbd,
	0x97, 0x67, 0xf1, 0x02, 0x7c, 0xb2, 0xb4, 0xe6, 0x2f, 0xc7, 0xb6, 0xb1, 0x34, 0xae, 0x9c, 0xd9,
	0xdc, 0x98, 0x9b, 0xce, 0x62, 0x3a, 0x7b, 0x65, 0x8e, 0xac, 0x89, 0x65, 0x8e, 0xdb, 0x25, 0xb9,
	0xb5, 0xdd, 0xa9, 0x8d, 0x05, 0x61, 0x1b, 0xe4, 0xe1, 0x6b, 0x8c, 0xa0, 0xf8, 0x25, 0xe8, 0x1e,
	0x20, 0xd6, 0xc8, 0x70, 0x16, 0xd3, 0xb1, 0x79, 0x65, 0x5e, 0x1a, 0x73, 0xb3, 0x2d, 0xc8, 0x9d,
	0xed, 0x4e, 0x6d, 0x5a, 0x9e, 0xbb, 0x20, 0x10, 0x05, 0xc8, 0x4f, 0x5e, 0xf5, 0x05, 0x50, 0x1e,
	0xe1, 0x86, 0xdf, 0x4d, 0xc7, 0xd6, 0xf4, 0xb2, 0x5d, 0x96, 0xdb, 0xdb, 0x9d, 0x7a, 0x92, 0x62,
	0x79, 0x0e, 0xc4, 0x01, 0x78, 0x71, 0x48, 0x0d, 0x47, 0xce, 0xdc, 0x36, 0xa6, 0xb3, 0x89, 0x69,
	0xb7, 0x2b, 0xd9, 0x84, 0xd6, 0xca, 0x9b, 0x47, 0x2e, 0x61, 0xd7, 0x28, 0x12, 0x3f, 0x03, 0xd2,
	0x01, 0x33, 0x31, 0xac, 0xab, 0x85, 0x6d, 0xb6, 0xab, 0x72, 0x63, 0xbb, 0x53, 0x8f, 0x27, 0x2e,
	0x0e, 0xe2, 0x08, 0xc9, 0xd5, 0x5f, 0x7e, 0x53, 0x84, 0xe1, 0xe5, 0xed, 0x9d, 0x22, 0xbc, 0xb9,
	0x53, 0x84, 0xbf, 0xef, 0x14, 0xe1, 0xf5, 0xbd, 0x52, 0x7a, 0x73, 0xaf, 0x94, 0xfe, 0xbc, 0x57,
	0x4a, 0xdf, 0x9f, 0xfb, 0x98, 0xaf, 0xe3, 0x95, 0xe6, 0xd1, 0x50, 0x0f, 0xe2, 0xf0, 0xfc, 0xdd,
	0x7f, 0xf4, 0x4f, 0xc5, 0x5f, 0x9a, 0xff, 0xbc, 0x41, 0x6c, 0x55, 0x4b, 0xe3, 0xf4, 0xf9, 0xbf,
	0x01, 0x00, 0x00, 0xff, 0xff, 0xf8, 0xd7, 0x1c, 0xd7, 0xcf, 0x05, 0x00, 0x00,
}

func (m *Withdrawal) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *Withdrawal) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *Withdrawal) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	n1, err1 := github_com_cosmos_gogoproto_types.StdTimeMarshalTo(m.UpdatedAt, dAtA[i-github_com_cosmos_gogoproto_types.SizeOfStdTime(m.UpdatedAt):])
	if err1 != nil {
		return 0, err1
	}
	i -= n1
	i = encodeVarintWithdrawal(dAtA, i, uint64(n1))
	i--
	dAtA[i] = 0x6a
	n2, err2 := github_com_cosmos_gogoproto_types.StdTimeMarshalTo(m.CreatedAt, dAtA[i-github_com_cosmos_gogoproto_types.SizeOfStdTime(m.CreatedAt):])
	if err2 != nil {
		return 0, err2
	}
	i -= n2
	i = encodeVarintWithdrawal(dAtA, i, uint64(n2))
	i--
	dAtA[i] = 0x62
	if m.UnbondingEndsAt != nil {
		n3, err3 := github_com_cosmos_gogoproto_types.StdTimeMarshalTo(*m.UnbondingEndsAt, dAtA[i-github_com_cosmos_gogoproto_types.SizeOfStdTime(*m.UnbondingEndsAt):])
		if err3 != nil {
			return 0, err3
		}
		i -= n3
		i = encodeVarintWithdrawal(dAtA, i, uint64(n3))
		i--
		dAtA[i] = 0x5a
	}
	if m.UpdatedAtHeight != 0 {
		i = encodeVarintWithdrawal(dAtA, i, uint64(m.UpdatedAtHeight))
		i--
		dAtA[i] = 0x50
	}
	if m.CreatedAtHeight != 0 {
		i = encodeVarintWithdrawal(dAtA, i, uint64(m.CreatedAtHeight))
		i--
		dAtA[i] = 0x48
	}
	{
		size, err := m.Amount.MarshalToSizedBuffer(dAtA[:i])
		if err != nil {
			return 0, err
		}
		i -= size
		i = encodeVarintWithdrawal(dAtA, i, uint64(size))
	}
	i--
	dAtA[i] = 0x42
	if len(m.ToAddress) > 0 {
		i -= len(m.ToAddress)
		copy(dAtA[i:], m.ToAddress)
		i = encodeVarintWithdrawal(dAtA, i, uint64(len(m.ToAddress)))
		i--
		dAtA[i] = 0x3a
	}
	if len(m.DepositorAddress) > 0 {
		i -= len(m.DepositorAddress)
		copy(dAtA[i:], m.DepositorAddress)
		i = encodeVarintWithdrawal(dAtA, i, uint64(len(m.DepositorAddress)))
		i--
		dAtA[i] = 0x32
	}
	if m.ErrorState != 0 {
		i = encodeVarintWithdrawal(dAtA, i, uint64(m.ErrorState))
		i--
		dAtA[i] = 0x28
	}
	if m.State != 0 {
		i = encodeVarintWithdrawal(dAtA, i, uint64(m.State))
		i--
		dAtA[i] = 0x20
	}
	if m.WithdrawalId != 0 {
		i = encodeVarintWithdrawal(dAtA, i, uint64(m.WithdrawalId))
		i--
		dAtA[i] = 0x18
	}
	if m.DepositId != 0 {
		i = encodeVarintWithdrawal(dAtA, i, uint64(m.DepositId))
		i--
		dAtA[i] = 0x10
	}
	if m.PoolId != 0 {
		i = encodeVarintWithdrawal(dAtA, i, uint64(m.PoolId))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *WithdrawalIDs) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *WithdrawalIDs) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *WithdrawalIDs) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.WithdrawalId != 0 {
		i = encodeVarintWithdrawal(dAtA, i, uint64(m.WithdrawalId))
		i--
		dAtA[i] = 0x10
	}
	if m.PoolId != 0 {
		i = encodeVarintWithdrawal(dAtA, i, uint64(m.PoolId))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *WithdrawalIDsCollection) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *WithdrawalIDsCollection) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *WithdrawalIDsCollection) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.WithdrawalsIds) > 0 {
		for iNdEx := len(m.WithdrawalsIds) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.WithdrawalsIds[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintWithdrawal(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0xa
		}
	}
	return len(dAtA) - i, nil
}

func encodeVarintWithdrawal(dAtA []byte, offset int, v uint64) int {
	offset -= sovWithdrawal(v)
	base := offset
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return base
}
func (m *Withdrawal) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.PoolId != 0 {
		n += 1 + sovWithdrawal(uint64(m.PoolId))
	}
	if m.DepositId != 0 {
		n += 1 + sovWithdrawal(uint64(m.DepositId))
	}
	if m.WithdrawalId != 0 {
		n += 1 + sovWithdrawal(uint64(m.WithdrawalId))
	}
	if m.State != 0 {
		n += 1 + sovWithdrawal(uint64(m.State))
	}
	if m.ErrorState != 0 {
		n += 1 + sovWithdrawal(uint64(m.ErrorState))
	}
	l = len(m.DepositorAddress)
	if l > 0 {
		n += 1 + l + sovWithdrawal(uint64(l))
	}
	l = len(m.ToAddress)
	if l > 0 {
		n += 1 + l + sovWithdrawal(uint64(l))
	}
	l = m.Amount.Size()
	n += 1 + l + sovWithdrawal(uint64(l))
	if m.CreatedAtHeight != 0 {
		n += 1 + sovWithdrawal(uint64(m.CreatedAtHeight))
	}
	if m.UpdatedAtHeight != 0 {
		n += 1 + sovWithdrawal(uint64(m.UpdatedAtHeight))
	}
	if m.UnbondingEndsAt != nil {
		l = github_com_cosmos_gogoproto_types.SizeOfStdTime(*m.UnbondingEndsAt)
		n += 1 + l + sovWithdrawal(uint64(l))
	}
	l = github_com_cosmos_gogoproto_types.SizeOfStdTime(m.CreatedAt)
	n += 1 + l + sovWithdrawal(uint64(l))
	l = github_com_cosmos_gogoproto_types.SizeOfStdTime(m.UpdatedAt)
	n += 1 + l + sovWithdrawal(uint64(l))
	return n
}

func (m *WithdrawalIDs) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.PoolId != 0 {
		n += 1 + sovWithdrawal(uint64(m.PoolId))
	}
	if m.WithdrawalId != 0 {
		n += 1 + sovWithdrawal(uint64(m.WithdrawalId))
	}
	return n
}

func (m *WithdrawalIDsCollection) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if len(m.WithdrawalsIds) > 0 {
		for _, e := range m.WithdrawalsIds {
			l = e.Size()
			n += 1 + l + sovWithdrawal(uint64(l))
		}
	}
	return n
}

func sovWithdrawal(x uint64) (n int) {
	return (math_bits.Len64(x|1) + 6) / 7
}
func sozWithdrawal(x uint64) (n int) {
	return sovWithdrawal(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (m *Withdrawal) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowWithdrawal
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: Withdrawal: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: Withdrawal: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field PoolId", wireType)
			}
			m.PoolId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowWithdrawal
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.PoolId |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field DepositId", wireType)
			}
			m.DepositId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowWithdrawal
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.DepositId |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field WithdrawalId", wireType)
			}
			m.WithdrawalId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowWithdrawal
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.WithdrawalId |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field State", wireType)
			}
			m.State = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowWithdrawal
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.State |= WithdrawalState(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 5:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ErrorState", wireType)
			}
			m.ErrorState = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowWithdrawal
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.ErrorState |= WithdrawalState(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 6:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field DepositorAddress", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowWithdrawal
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthWithdrawal
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthWithdrawal
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.DepositorAddress = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 7:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ToAddress", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowWithdrawal
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthWithdrawal
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthWithdrawal
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ToAddress = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 8:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Amount", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowWithdrawal
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthWithdrawal
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthWithdrawal
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := m.Amount.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 9:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field CreatedAtHeight", wireType)
			}
			m.CreatedAtHeight = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowWithdrawal
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.CreatedAtHeight |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 10:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field UpdatedAtHeight", wireType)
			}
			m.UpdatedAtHeight = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowWithdrawal
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.UpdatedAtHeight |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 11:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field UnbondingEndsAt", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowWithdrawal
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthWithdrawal
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthWithdrawal
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.UnbondingEndsAt == nil {
				m.UnbondingEndsAt = new(time.Time)
			}
			if err := github_com_cosmos_gogoproto_types.StdTimeUnmarshal(m.UnbondingEndsAt, dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 12:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field CreatedAt", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowWithdrawal
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthWithdrawal
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthWithdrawal
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := github_com_cosmos_gogoproto_types.StdTimeUnmarshal(&m.CreatedAt, dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 13:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field UpdatedAt", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowWithdrawal
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthWithdrawal
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthWithdrawal
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := github_com_cosmos_gogoproto_types.StdTimeUnmarshal(&m.UpdatedAt, dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipWithdrawal(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthWithdrawal
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *WithdrawalIDs) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowWithdrawal
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: WithdrawalIDs: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: WithdrawalIDs: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field PoolId", wireType)
			}
			m.PoolId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowWithdrawal
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.PoolId |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field WithdrawalId", wireType)
			}
			m.WithdrawalId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowWithdrawal
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.WithdrawalId |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipWithdrawal(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthWithdrawal
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *WithdrawalIDsCollection) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowWithdrawal
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: WithdrawalIDsCollection: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: WithdrawalIDsCollection: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field WithdrawalsIds", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowWithdrawal
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthWithdrawal
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthWithdrawal
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.WithdrawalsIds = append(m.WithdrawalsIds, WithdrawalIDs{})
			if err := m.WithdrawalsIds[len(m.WithdrawalsIds)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipWithdrawal(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthWithdrawal
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipWithdrawal(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	depth := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowWithdrawal
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowWithdrawal
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
		case 1:
			iNdEx += 8
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowWithdrawal
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthWithdrawal
			}
			iNdEx += length
		case 3:
			depth++
		case 4:
			if depth == 0 {
				return 0, ErrUnexpectedEndOfGroupWithdrawal
			}
			depth--
		case 5:
			iNdEx += 4
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
		if iNdEx < 0 {
			return 0, ErrInvalidLengthWithdrawal
		}
		if depth == 0 {
			return iNdEx, nil
		}
	}
	return 0, io.ErrUnexpectedEOF
}

var (
	ErrInvalidLengthWithdrawal        = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowWithdrawal          = fmt.Errorf("proto: integer overflow")
	ErrUnexpectedEndOfGroupWithdrawal = fmt.Errorf("proto: unexpected end of group")
)
